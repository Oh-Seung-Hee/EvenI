#pragma once

#include "../Global/Define/KGDefine.h"

/*
* 함수란?
* - 컴퓨터가 수행 할 명령문을 그룹화시켜서 재사용 할 수 있는 기능을 의미한다. (즉, 함수를 활용하면 중복되는 작업을 간소화시키는 것이 가능하다.)
* 
* C 함수 선언 방법
* - 반환형 + 함수 이름 + 매개 변수 (입력)
* 
* C 함수 구현 방법
* - 반환형 + 함수 이름 + 매개 변수 (입력) + 함수 몸체
* 
* Ex)
* void SomeFunc(void); <- 출력 X, 입력 X
* void SomeFunc(int a_nLhs, int a_nRhs); <- 출력 X, 입력 O
* 
* int SomeFunc(void); <- 출력 O, 입력 X
* int SomeFunc(int a_nLhs, int a_nRhs); <- 출력 O, 입력 O
* 
* 프로그래밍 언어에서 함수는 수학에서의 함수와 달리 출력 또는 입력이 존재하거나 없을수도 있다. 따라서, 4 가지 형태의 함수가 존재하는 것을 알 수 있다.
* 
* 함수 선언이란?
* - 특정 함수의 존재 여부를 컴파일러에게 알리는 역할을 수행한다.
* 
* 함수 구현이란?
* - 특정 함수의 동작 방식을 컴파일러에게 알리는 역할을 수행한다.
* 
* 즉, 함수 선언은 특정 함수의 존재 여부를 단순히 컴파일러에게 알리는 역할을 수행하는 것이기 때문에 해당 구문은 중복으로 명시하는 것이 가능하다.
* 반면, 함수 구현은 해당 함수가 어떻게 동작할지를 알리는 역할을 수행하기 때문에 해당 구문은 절대로 중복으로 명시하면 안된다. (즉, 특정 함수의 구현이 2 개 이상 존재 할 경우
* 컴파일 에러가 발생한다.)
*/
namespace E07 {
	/** Example 7 */
	int Example_07(int argc, char* args[]);
}
