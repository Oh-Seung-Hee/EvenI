#pragma once

#include "../Global/Define/KGDefine.h"

/*
* 프로그래밍 언어란?
* - 컴퓨터에게 명령을 내리기 위한 명령문을 작성하기 위한 언어를 의미한다. (즉, 프로그램을 제작하기 위한 언어를 의미한다.)
* 
* 프로그램이란?
* - 컴퓨터가 수행하기 위한 명령문의 집합을 의미한다. (즉, 기계어로 작성 된 파일을 의미한다.)
* 
* C 로 작성 된 프로그램이 만들어지는 단계 (과정)
* - 코드 작성
* - 전처리
* - 컴파일
* - 링크
* - 프로그램 생성 (Ex. exe, 등등...)
* 
* 전처리 단계란?
* - 컴파일 이전에 C로 작성 된 코드를 튜닝하는 단계를 의미한다. 또한, 해당 단계에 해당하는 명령어는 모두 # 기호로 시작하는
* 특징이 존재한다.
* 
* 자주 사용되는 전처리기 명령어
* - include : 특정 파일을 포함 할 때 사용
* - define : 기호 정의, 매크로 상수 또는 매크로 함수를 제작 할 때 사용
* - if ~ elif : 전처리 버전의 조건문 (즉, 특정 영역의 코드를 활성/비활성 할 때 사용)
* 
* 컴파일 단계란?
* - C (고급 언어) 로 작성 된 명령어를 기계어로 변환하는 단계를 의미한다. 또한, 해당 과정은 파일 별로 이루어지기 때문에 해당
* 단계를 완료한 결과물 (기계어 코드) 또한 파일의 개수만큼 존재한다. (Ex. C 파일 10 => 기계어 파일 10)
* 
* 링크 단계란?
* - 기계어로 변환 된 파일을 하나로 통합해서 최종적으로 실행 파일을 만들어주는 단계를 의미한다. 즉, 해당 단계가 완료되면 최종적으로
* 컴퓨터에서 실행 가능한 프로그램 파일이 생성된다.
* 
* 프로그래밍은 디버깅이 반이다. 즉, 문제를 발견하고 고치는 과정이 중요하기 때문에 코드를 작성 할 때 가능한 문제가 발생 할 수 있는
* 범위를 줄여주는 것이 좋다.
*/
namespace E01 {
	/** Example 1 */
	int Example_01(int argc, char* args[]);
}
