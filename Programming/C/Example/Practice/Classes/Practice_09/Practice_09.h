#pragma once

#include "../Global/Define/KGDefine.h"

/*
과제 9 - 1
- 숫자를 1 개 입력 받은 후 해당 숫자를 특정 이미지로 출력하기

Ex)
숫자 입력 : 012

=====> 결과 <=====
*****     * *****
*   *     *     *
*   *     *     *
*   *     * *****
*   *     * *
*   *     * *
*****     * *****


과제 9 - 2
- 2 차원 배열 회전하기
- 2 차원 배열 크기를 입력 받은 후 0 부터 차례대로 각 요소를 초기화한다 (단, 입력 가능한 최대 크기는 50 으로 제한)
- 회전 방향을 입력 받아 해당 방향으로 90 도 회전 된 결과 출력하기 (단, 회전 과정에서 별도의 배열을 사용하는 것은 불가)

Ex)
2 차원 배열 크기 입력 : 3 3

=====> 배열 요소 <=====
0 1 2
3 4 5
6 7 8

회전 방향 입력 (0 : 왼쪽 방향, 1 : 오른쪽 방향) : 0

Case 1. 왼쪽 회전
=====> 배열 요소 - 회전 후 <=====
2 5 8
1 4 7
0 3 6

Case 2. 오른쪽 회전
=====> 배열 요소 - 회전 후 <=====
6 3 0
7 4 1
8 5 2


과제 9 - 3
- 회원 관리 시스템 제작하기 (단, 최대 관리 가능한 100 명으로 제한)

회원 정보
- 이름
- 전화번호

Ex)
=====> 메뉴 <=====
1. 회원 추가
2. 회원 삭제
3. 회원 검색
4. 모든 회원 출력
5. 종료

메뉴 선택 : 1

=====> 회원 추가 <=====
이름 입력 : 회원 1
전화번호 입력 : 1234

Case 1. 동일한 이름을 지닌 회원이 없을 경우
회원 1 을(를) 추가했습니다

Case 2. 동일한 이름을 지닌 회원이 존재 할 경우
회원 1 은 이미 존재하는 회원입니다

메뉴 선택 : 2

=====> 회원 삭제 <=====
이름 입력 : 회원 1

Case 1. 동일한 이름을 지닌 회원이 없을 경우
회원 1 은 존재하지 않는 회원입니다

Case 2. 동일한 이름을 지닌 회원이 존재 할 경우
회원 1 을(를) 삭제했습니다

메뉴 선택 : 3

=====> 회원 검색 <=====
이름 입력 : 회원 1

Case 1. 동일한 이름을 지닌 회원이 없을 경우
회원 1 은 존재하지 않는 회원입니다

Case 2. 동일한 이름을 지닌 회원이 존재 할 경우
=====> 회원 정보 <=====
이름 : 회원 1
전화번호 : 1234

메뉴 선택 : 4

=====> 모든 회원 <=====
이름 : 회원 1
전화번호 : 1234

이름 : 회원 2
전화번호 : 1234

위와 같이 모든 회원 정보 출력
*/
namespace P09 {
	/** Practice 9 */
	int Practice_09(int argc, char* args[]);
}
